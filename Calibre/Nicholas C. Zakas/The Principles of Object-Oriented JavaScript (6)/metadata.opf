<?xml version='1.0' encoding='utf-8'?>
<package xmlns="http://www.idpf.org/2007/opf" unique-identifier="uuid_id" version="2.0">
    <metadata xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:opf="http://www.idpf.org/2007/opf">
        <dc:identifier opf:scheme="calibre" id="calibre_id">6</dc:identifier>
        <dc:identifier opf:scheme="uuid" id="uuid_id">435f16b9-7e40-4875-ad2f-6fda450a19ab</dc:identifier>
        <dc:title>The Principles of Object-Oriented JavaScript</dc:title>
        <dc:creator opf:file-as="Zakas, Nicholas C." opf:role="aut">Nicholas C. Zakas</dc:creator>
        <dc:contributor opf:file-as="calibre" opf:role="bkp">calibre (2.30.0) [http://calibre-ebook.com]</dc:contributor>
        <dc:date>2014-02-23T06:00:00+00:00</dc:date>
        <dc:description>&lt;div&gt;&lt;p&gt;If you've used a more traditional object-oriented language, such as C++ or Java, JavaScript probably doesn't seem object-oriented at all. It has no concept of classes, and you don't even need to define any objects in order to write code. But don't be fooledâ€”JavaScript is an incredibly powerful and expressive object-oriented language that puts many design decisions right into your hands.  &lt;/p&gt;&lt;p&gt;In &lt;em&gt;The Principles of Object-Oriented JavaScript&lt;/em&gt;, Nicholas C. Zakas thoroughly explores JavaScript's object-oriented nature, revealing the language's unique implementation of inheritance and other key characteristics. You'll learn:  &lt;/p&gt;&lt;ul&gt;&lt;li&gt;The difference between primitive and reference values&lt;/li&gt;&lt;li&gt;What makes JavaScript functions so unique&lt;/li&gt;&lt;li&gt;The various ways to create objects&lt;/li&gt;&lt;li&gt;How to define your own constructors&lt;/li&gt;&lt;li&gt;How to work with and understand prototypes&lt;/li&gt;&lt;li&gt;Inheritance patterns for types and objects&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;The Principles of Object-Oriented JavaScript&lt;/em&gt; will leave even experienced developers with a deeper understanding of JavaScript. Unlock the secrets behind how objects work in JavaScript so you can write clearer, more flexible, and more efficient code.&lt;/p&gt;&lt;p&gt;**&lt;/p&gt;&lt;/div&gt;</dc:description>
        <dc:publisher>No Starch Press</dc:publisher>
        <dc:identifier opf:scheme="AMAZON">1593275404</dc:identifier>
        <dc:identifier opf:scheme="ISBN">9781593275402</dc:identifier>
        <dc:language>eng</dc:language>
        <dc:subject>V413HAV</dc:subject>
        <meta content="{&quot;Nicholas C. Zakas&quot;: &quot;&quot;}" name="calibre:author_link_map"/>
        <meta content="10" name="calibre:rating"/>
        <meta content="2015-06-11T19:09:45.714838+00:00" name="calibre:timestamp"/>
        <meta content="Principles of Object-Oriented JavaScript, The" name="calibre:title_sort"/>
    </metadata>
    <guide>
        <reference href="cover.jpg" title="Cover" type="cover"/>
    </guide>
</package>
