<?xml version='1.0' encoding='utf-8'?>
<package xmlns="http://www.idpf.org/2007/opf" unique-identifier="uuid_id" version="2.0">
    <metadata xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:opf="http://www.idpf.org/2007/opf">
        <dc:identifier opf:scheme="calibre" id="calibre_id">5</dc:identifier>
        <dc:identifier opf:scheme="uuid" id="uuid_id">5ad96712-517b-4c2e-bad5-5648446e6bdb</dc:identifier>
        <dc:title>Physics for JavaScript Games, Animation, and Simulations: With HTML5 Canvas</dc:title>
        <dc:creator opf:file-as="Dobre, Adrian" opf:role="aut">Adrian Dobre</dc:creator>
        <dc:contributor opf:file-as="calibre" opf:role="bkp">calibre (2.30.0) [http://calibre-ebook.com]</dc:contributor>
        <dc:date>2014-05-21T06:00:00+00:00</dc:date>
        <dc:description>&lt;div&gt;&lt;p&gt;Have you ever wanted to include believable physical behaviors in your games and projects to give them that extra edge? &lt;em&gt;Physics for JavaScript Games, Animation, and Simulations&lt;/em&gt; teaches you how to incorporate real physics, such as gravity, friction, and buoyancy, into your HTML5 games, animations, and simulations. It also includes more advanced topics, such as particle systems, which are essential for creating effects such as sparks or smoke. The book also addresses the key issue of balancing accuracy and simplicity in your games and simulations, and the final chapters provide you with the information and the code to make the right choice for your project.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Physics for JavaScript Games, Animation, and Simulations&lt;/em&gt; assumes you have a basic knowledge of JavaScript and HTML5. However, no previous knowledge of physics is required—only some very basic math skills. The authors present everything from basic principles to advanced concepts in an approachable way, so you’ll be able to follow the logic and easily adapt the principles to your own applications.&lt;/p&gt;&lt;p&gt;The book is packed full of practical examples of how you can apply physics to your own games and applications. Spring behaviors can be used for anything from tweaking lowrider suspension to creating cloth simulation; flotation mechanics enable the simulation of submersibles or dirigibles; you can even create your own solar system with accurate orbits and gravity. It doesn’t matter if you’re modeling the Lorentz force in an electromagnetic field or you’re modeling the lift force in a flight simulator, &lt;em&gt;Physics for JavaScript Games, Animation, and Simulations&lt;/em&gt; enables you to fill your games and applications with accurate and realistic effects. &lt;/p&gt;&lt;h3&gt;What you’ll learn&lt;/h3&gt;&lt;p&gt;• Learn all the basic math and physics you’ll need to incorporate realism into your projects&lt;/p&gt;&lt;p&gt;• Incorporate a wide range of forces, such as gravity, friction, and buoyancy&lt;/p&gt;&lt;p&gt;• Build a number of realistic simulations&lt;/p&gt;&lt;p&gt;• Model particle systems and use them to create visual effects&lt;/p&gt;&lt;p&gt;• Create complex systems using rigid bodies and mass-spring systems&lt;/p&gt;&lt;p&gt;• Deal with numerical subtleties, including accuracy and stability of integration schemes&lt;/p&gt;&lt;h3&gt;Who this book is for&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Physics for JavaScript Games, Animation, and Simulations&lt;/em&gt; is for JavaScript developers interested in incorporating real physics into their games, animations, simulations, or generative art projects**&lt;/p&gt;&lt;h3&gt;Table of Contents&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;Introduction to Physics Programming &lt;/li&gt;&lt;li&gt;JavaScript and HTML5 Canvas &lt;/li&gt;&lt;li&gt;Some Math Background &lt;/li&gt;&lt;li&gt;Basic Physics Concepts &lt;/li&gt;&lt;li&gt;The Laws Governing Motion &lt;/li&gt;&lt;li&gt;Gravity, Orbits, and Rockets &lt;/li&gt;&lt;li&gt;Contact and Fluid Forces &lt;/li&gt;&lt;li&gt;Restoring Forces: Springs and Oscillations &lt;/li&gt;&lt;li&gt;Centripetal Forces: Rotational Motion &lt;/li&gt;&lt;li&gt;Long-Range Forces &lt;/li&gt;&lt;li&gt;Collisions &lt;/li&gt;&lt;li&gt;Particle Systems &lt;/li&gt;&lt;li&gt;Extended Objects &lt;/li&gt;&lt;li&gt;Numerical Integration Schemes, Accuracy, and Scaling &lt;/li&gt;&lt;li&gt;Doing Physics in 3D &lt;/li&gt;&lt;li&gt;Simulation Projects &lt;/li&gt;&lt;/ol&gt;&lt;p&gt;**&lt;/p&gt;&lt;/div&gt;</dc:description>
        <dc:publisher>Apress</dc:publisher>
        <dc:identifier opf:scheme="ISBN">9781430263371</dc:identifier>
        <dc:identifier opf:scheme="AMAZON">1430263377</dc:identifier>
        <dc:language>eng</dc:language>
        <meta content="{&quot;Adrian Dobre&quot;: &quot;&quot;}" name="calibre:author_link_map"/>
        <meta content="2015-06-07T17:05:37.912308+00:00" name="calibre:timestamp"/>
        <meta content="Physics for JavaScript Games, Animation, and Simulations: With HTML5 Canvas" name="calibre:title_sort"/>
    </metadata>
    <guide>
        <reference href="cover.jpg" title="Cover" type="cover"/>
    </guide>
</package>
